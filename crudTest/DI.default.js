'use strict';

var path = require('path');
var fs = require('fs');
var uuidV4 = require('uuid/v4');

var sourceMapSupport = require('source-map-support');
sourceMapSupport.install();
var appError = require('../error.appError');

var logger;

{
  // LOGGER
  var winston = require('winston');
  var env = process.env.NODE_ENV || 'development';
  var logDir = 'log';
  // Create the log directory if it does not exist
  if (!fs.existsSync(logDir)) {
    fs.mkdirSync(logDir);
  }
  var tsFormat = function tsFormat() {
    return new Date().toLocaleTimeString();
  };
  logger = new winston.Logger({
    transports: [
    // colorize the output to the console
    new winston.transports.Console({
      timestamp: tsFormat,
      colorize: true,
      level: 'info'
    }), new winston.transports.File({
      filename: logDir + '/results.log',
      timestamp: tsFormat,
      level: env === 'development' ? 'debug' : 'info'
    })]
  });
}

process.on('unhandledRejection', function (reason, promise) {
  logger.error('unhandledRejection Reason: ', promise, reason);
  logger.trace(promise);
});

module.exports = {
  throwError: function throwError(message, originalError, args) {
    throw new appError(message, originalError, args);
  },
  log: logger.info,
  debug: logger.debug,
  error: function error(_error) {
    if (_error.originalError) {
      logger.error('originalError', _error.originalError);
      logger.error('appError', _error.info, _error.appTrace);
    } else logger.error(_error);
    if (_error.appTrace) logger.debug(_error.appTrace);else console.trace(_error);
  }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRJLmRlZmF1bHQuZXM2Il0sIm5hbWVzIjpbInBhdGgiLCJyZXF1aXJlIiwiZnMiLCJ1dWlkVjQiLCJzb3VyY2VNYXBTdXBwb3J0IiwiaW5zdGFsbCIsImFwcEVycm9yIiwibG9nZ2VyIiwid2luc3RvbiIsImVudiIsInByb2Nlc3MiLCJOT0RFX0VOViIsImxvZ0RpciIsImV4aXN0c1N5bmMiLCJta2RpclN5bmMiLCJ0c0Zvcm1hdCIsIkRhdGUiLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJMb2dnZXIiLCJ0cmFuc3BvcnRzIiwiQ29uc29sZSIsInRpbWVzdGFtcCIsImNvbG9yaXplIiwibGV2ZWwiLCJGaWxlIiwiZmlsZW5hbWUiLCJvbiIsInJlYXNvbiIsInByb21pc2UiLCJlcnJvciIsInRyYWNlIiwibW9kdWxlIiwiZXhwb3J0cyIsInRocm93RXJyb3IiLCJtZXNzYWdlIiwib3JpZ2luYWxFcnJvciIsImFyZ3MiLCJsb2ciLCJpbmZvIiwiZGVidWciLCJhcHBUcmFjZSIsImNvbnNvbGUiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsT0FBT0MsUUFBUSxNQUFSLENBQVg7QUFDQSxJQUFJQyxLQUFLRCxRQUFRLElBQVIsQ0FBVDtBQUNBLElBQU1FLFNBQVNGLFFBQVEsU0FBUixDQUFmOztBQUVBLElBQUlHLG1CQUFtQkgsUUFBUSxvQkFBUixDQUF2QjtBQUNBRyxpQkFBaUJDLE9BQWpCO0FBQ0EsSUFBSUMsV0FBV0wsUUFBUSxtQkFBUixDQUFmOztBQUVBLElBQUlNLE1BQUo7O0FBRUE7QUFBRTtBQUNBLE1BQU1DLFVBQVVQLFFBQVEsU0FBUixDQUFoQjtBQUNBLE1BQU1RLE1BQU1DLFFBQVFELEdBQVIsQ0FBWUUsUUFBWixJQUF3QixhQUFwQztBQUNBLE1BQU1DLFNBQVMsS0FBZjtBQUNGO0FBQ0UsTUFBSSxDQUFDVixHQUFHVyxVQUFILENBQWNELE1BQWQsQ0FBTCxFQUE0QjtBQUMxQlYsT0FBR1ksU0FBSCxDQUFhRixNQUFiO0FBQ0Q7QUFDRCxNQUFNRyxXQUFXLFNBQVhBLFFBQVc7QUFBQSxXQUFPLElBQUlDLElBQUosRUFBRCxDQUFhQyxrQkFBYixFQUFOO0FBQUEsR0FBakI7QUFDQVYsV0FBUyxJQUFLQyxRQUFRVSxNQUFiLENBQXFCO0FBQzVCQyxnQkFBWTtBQUNaO0FBQ0UsUUFBS1gsUUFBUVcsVUFBUixDQUFtQkMsT0FBeEIsQ0FBaUM7QUFDL0JDLGlCQUFXTixRQURvQjtBQUUvQk8sZ0JBQVUsSUFGcUI7QUFHL0JDLGFBQU87QUFId0IsS0FBakMsQ0FGVSxFQU9WLElBQUtmLFFBQVFXLFVBQVIsQ0FBbUJLLElBQXhCLENBQThCO0FBQzVCQyxnQkFBYWIsTUFBYixpQkFENEI7QUFFNUJTLGlCQUFXTixRQUZpQjtBQUc1QlEsYUFBT2QsUUFBUSxhQUFSLEdBQXdCLE9BQXhCLEdBQWtDO0FBSGIsS0FBOUIsQ0FQVTtBQURnQixHQUFyQixDQUFUO0FBZUQ7O0FBRURDLFFBQVFnQixFQUFSLENBQVcsb0JBQVgsRUFBaUMsVUFBQ0MsTUFBRCxFQUFTQyxPQUFULEVBQXFCO0FBQ3BEckIsU0FBT3NCLEtBQVAsQ0FBYSw2QkFBYixFQUE0Q0QsT0FBNUMsRUFBcURELE1BQXJEO0FBQ0FwQixTQUFPdUIsS0FBUCxDQUFhRixPQUFiO0FBQ0QsQ0FIRDs7QUFLQUcsT0FBT0MsT0FBUCxHQUFpQjtBQUNmQyxjQUFZLG9CQUFDQyxPQUFELEVBQVVDLGFBQVYsRUFBeUJDLElBQXpCLEVBQWtDO0FBQzVDLFVBQU0sSUFBSTlCLFFBQUosQ0FBYTRCLE9BQWIsRUFBc0JDLGFBQXRCLEVBQXFDQyxJQUFyQyxDQUFOO0FBQ0QsR0FIYztBQUlmQyxPQUFLOUIsT0FBTytCLElBSkc7QUFLZkMsU0FBT2hDLE9BQU9nQyxLQUxDO0FBTWZWLFNBQU8sZUFBQ0EsTUFBRCxFQUFXO0FBQ2hCLFFBQUlBLE9BQU1NLGFBQVYsRUFBeUI7QUFDdkI1QixhQUFPc0IsS0FBUCxDQUFhLGVBQWIsRUFBOEJBLE9BQU1NLGFBQXBDO0FBQ0E1QixhQUFPc0IsS0FBUCxDQUFhLFVBQWIsRUFBeUJBLE9BQU1TLElBQS9CLEVBQW9DVCxPQUFNVyxRQUExQztBQUNELEtBSEQsTUFHT2pDLE9BQU9zQixLQUFQLENBQWFBLE1BQWI7QUFDUCxRQUFJQSxPQUFNVyxRQUFWLEVBQW1CakMsT0FBT2dDLEtBQVAsQ0FBYVYsT0FBTVcsUUFBbkIsRUFBbkIsS0FDS0MsUUFBUVgsS0FBUixDQUFjRCxNQUFkO0FBQ047QUFiYyxDQUFqQiIsImZpbGUiOiJESS5kZWZhdWx0LmVzNiIsInNvdXJjZXNDb250ZW50IjpbInZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG52YXIgZnMgPSByZXF1aXJlKCdmcycpXG5jb25zdCB1dWlkVjQgPSByZXF1aXJlKCd1dWlkL3Y0JylcblxudmFyIHNvdXJjZU1hcFN1cHBvcnQgPSByZXF1aXJlKCdzb3VyY2UtbWFwLXN1cHBvcnQnKVxuc291cmNlTWFwU3VwcG9ydC5pbnN0YWxsKClcbnZhciBhcHBFcnJvciA9IHJlcXVpcmUoJy4uL2Vycm9yLmFwcEVycm9yJylcblxudmFyIGxvZ2dlclxuXG57IC8vIExPR0dFUlxuICBjb25zdCB3aW5zdG9uID0gcmVxdWlyZSgnd2luc3RvbicpXG4gIGNvbnN0IGVudiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8ICdkZXZlbG9wbWVudCdcbiAgY29uc3QgbG9nRGlyID0gJ2xvZydcbi8vIENyZWF0ZSB0aGUgbG9nIGRpcmVjdG9yeSBpZiBpdCBkb2VzIG5vdCBleGlzdFxuICBpZiAoIWZzLmV4aXN0c1N5bmMobG9nRGlyKSkge1xuICAgIGZzLm1rZGlyU3luYyhsb2dEaXIpXG4gIH1cbiAgY29uc3QgdHNGb3JtYXQgPSAoKSA9PiAobmV3IERhdGUoKSkudG9Mb2NhbGVUaW1lU3RyaW5nKClcbiAgbG9nZ2VyID0gbmV3ICh3aW5zdG9uLkxvZ2dlcikoe1xuICAgIHRyYW5zcG9ydHM6IFtcbiAgICAvLyBjb2xvcml6ZSB0aGUgb3V0cHV0IHRvIHRoZSBjb25zb2xlXG4gICAgICBuZXcgKHdpbnN0b24udHJhbnNwb3J0cy5Db25zb2xlKSh7XG4gICAgICAgIHRpbWVzdGFtcDogdHNGb3JtYXQsXG4gICAgICAgIGNvbG9yaXplOiB0cnVlLFxuICAgICAgICBsZXZlbDogJ2luZm8nXG4gICAgICB9KSxcbiAgICAgIG5ldyAod2luc3Rvbi50cmFuc3BvcnRzLkZpbGUpKHtcbiAgICAgICAgZmlsZW5hbWU6IGAke2xvZ0Rpcn0vcmVzdWx0cy5sb2dgLFxuICAgICAgICB0aW1lc3RhbXA6IHRzRm9ybWF0LFxuICAgICAgICBsZXZlbDogZW52ID09PSAnZGV2ZWxvcG1lbnQnID8gJ2RlYnVnJyA6ICdpbmZvJ1xuICAgICAgfSlcbiAgICBdXG4gIH0pXG59XG5cbnByb2Nlc3Mub24oJ3VuaGFuZGxlZFJlamVjdGlvbicsIChyZWFzb24sIHByb21pc2UpID0+IHtcbiAgbG9nZ2VyLmVycm9yKCd1bmhhbmRsZWRSZWplY3Rpb24gUmVhc29uOiAnLCBwcm9taXNlLCByZWFzb24pXG4gIGxvZ2dlci50cmFjZShwcm9taXNlKVxufSlcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHRocm93RXJyb3I6IChtZXNzYWdlLCBvcmlnaW5hbEVycm9yLCBhcmdzKSA9PiB7XG4gICAgdGhyb3cgbmV3IGFwcEVycm9yKG1lc3NhZ2UsIG9yaWdpbmFsRXJyb3IsIGFyZ3MpXG4gIH0sXG4gIGxvZzogbG9nZ2VyLmluZm8sXG4gIGRlYnVnOiBsb2dnZXIuZGVidWcsXG4gIGVycm9yOiAoZXJyb3IpID0+IHtcbiAgICBpZiAoZXJyb3Iub3JpZ2luYWxFcnJvcikge1xuICAgICAgbG9nZ2VyLmVycm9yKCdvcmlnaW5hbEVycm9yJywgZXJyb3Iub3JpZ2luYWxFcnJvcilcbiAgICAgIGxvZ2dlci5lcnJvcignYXBwRXJyb3InLCBlcnJvci5pbmZvLGVycm9yLmFwcFRyYWNlKVxuICAgIH0gZWxzZSBsb2dnZXIuZXJyb3IoZXJyb3IpXG4gICAgaWYgKGVycm9yLmFwcFRyYWNlKWxvZ2dlci5kZWJ1ZyhlcnJvci5hcHBUcmFjZSlcbiAgICBlbHNlIGNvbnNvbGUudHJhY2UoZXJyb3IpXG4gIH1cbn1cbiJdfQ==