'use strict';

var path = require('path');
var fs = require('fs');
var uuidV4 = require('uuid/v4');

var sourceMapSupport = require('source-map-support');
sourceMapSupport.install();
var appError = require('./error.appError');

var logger;

{
  // LOGGER
  var winston = require('winston');
  var env = process.env.NODE_ENV || 'development';
  var logDir = 'log';
  // Create the log directory if it does not exist
  if (!fs.existsSync(logDir)) {
    fs.mkdirSync(logDir);
  }
  var tsFormat = function tsFormat() {
    return new Date().toLocaleTimeString();
  };
  logger = new winston.Logger({
    transports: [
    // colorize the output to the console
    new winston.transports.Console({
      timestamp: tsFormat,
      colorize: true,
      level: 'info'
    }), new winston.transports.File({
      filename: logDir + '/results.log',
      timestamp: tsFormat,
      level: env === 'development' ? 'debug' : 'info'
    })]
  });
}

process.on('unhandledRejection', function (reason, promise) {
  logger.error('unhandledRejection Reason: ', promise, reason);
  logger.trace(promise);
});

module.exports = {
  throwError: function throwError(message, originalError, args) {
    throw new appError(message, originalError, args);
  },
  log: logger.info,
  debug: logger.debug,
  error: function error(_error) {
    if (_error.originalError) {
      logger.error('originalError', _error.originalError);
      logger.error('appError', _error.info, _error.appTrace);
    } else logger.error(_error);
    if (_error.appTrace) logger.debug(_error.appTrace);else console.trace(_error);
  }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRJLmRlZmF1bHQuZXM2Il0sIm5hbWVzIjpbInBhdGgiLCJyZXF1aXJlIiwiZnMiLCJ1dWlkVjQiLCJzb3VyY2VNYXBTdXBwb3J0IiwiaW5zdGFsbCIsImFwcEVycm9yIiwibG9nZ2VyIiwid2luc3RvbiIsImVudiIsInByb2Nlc3MiLCJOT0RFX0VOViIsImxvZ0RpciIsImV4aXN0c1N5bmMiLCJta2RpclN5bmMiLCJ0c0Zvcm1hdCIsIkRhdGUiLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJMb2dnZXIiLCJ0cmFuc3BvcnRzIiwiQ29uc29sZSIsInRpbWVzdGFtcCIsImNvbG9yaXplIiwibGV2ZWwiLCJGaWxlIiwiZmlsZW5hbWUiLCJvbiIsInJlYXNvbiIsInByb21pc2UiLCJlcnJvciIsInRyYWNlIiwibW9kdWxlIiwiZXhwb3J0cyIsInRocm93RXJyb3IiLCJtZXNzYWdlIiwib3JpZ2luYWxFcnJvciIsImFyZ3MiLCJsb2ciLCJpbmZvIiwiZGVidWciLCJhcHBUcmFjZSIsImNvbnNvbGUiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsT0FBT0MsUUFBUSxNQUFSLENBQVg7QUFDQSxJQUFJQyxLQUFLRCxRQUFRLElBQVIsQ0FBVDtBQUNBLElBQU1FLFNBQVNGLFFBQVEsU0FBUixDQUFmOztBQUVBLElBQUlHLG1CQUFtQkgsUUFBUSxvQkFBUixDQUF2QjtBQUNBRyxpQkFBaUJDLE9BQWpCO0FBQ0EsSUFBSUMsV0FBV0wsUUFBUSxrQkFBUixDQUFmOztBQUVBLElBQUlNLE1BQUo7O0FBRUE7QUFBRTtBQUNBLE1BQU1DLFVBQVVQLFFBQVEsU0FBUixDQUFoQjtBQUNBLE1BQU1RLE1BQU1DLFFBQVFELEdBQVIsQ0FBWUUsUUFBWixJQUF3QixhQUFwQztBQUNBLE1BQU1DLFNBQVMsS0FBZjtBQUNGO0FBQ0UsTUFBSSxDQUFDVixHQUFHVyxVQUFILENBQWNELE1BQWQsQ0FBTCxFQUE0QjtBQUMxQlYsT0FBR1ksU0FBSCxDQUFhRixNQUFiO0FBQ0Q7QUFDRCxNQUFNRyxXQUFXLFNBQVhBLFFBQVc7QUFBQSxXQUFPLElBQUlDLElBQUosRUFBRCxDQUFhQyxrQkFBYixFQUFOO0FBQUEsR0FBakI7QUFDQVYsV0FBUyxJQUFLQyxRQUFRVSxNQUFiLENBQXFCO0FBQzVCQyxnQkFBWTtBQUNaO0FBQ0UsUUFBS1gsUUFBUVcsVUFBUixDQUFtQkMsT0FBeEIsQ0FBaUM7QUFDL0JDLGlCQUFXTixRQURvQjtBQUUvQk8sZ0JBQVUsSUFGcUI7QUFHL0JDLGFBQU87QUFId0IsS0FBakMsQ0FGVSxFQU9WLElBQUtmLFFBQVFXLFVBQVIsQ0FBbUJLLElBQXhCLENBQThCO0FBQzVCQyxnQkFBYWIsTUFBYixpQkFENEI7QUFFNUJTLGlCQUFXTixRQUZpQjtBQUc1QlEsYUFBT2QsUUFBUSxhQUFSLEdBQXdCLE9BQXhCLEdBQWtDO0FBSGIsS0FBOUIsQ0FQVTtBQURnQixHQUFyQixDQUFUO0FBZUQ7O0FBRURDLFFBQVFnQixFQUFSLENBQVcsb0JBQVgsRUFBaUMsVUFBQ0MsTUFBRCxFQUFTQyxPQUFULEVBQXFCO0FBQ3BEckIsU0FBT3NCLEtBQVAsQ0FBYSw2QkFBYixFQUE0Q0QsT0FBNUMsRUFBcURELE1BQXJEO0FBQ0FwQixTQUFPdUIsS0FBUCxDQUFhRixPQUFiO0FBQ0QsQ0FIRDs7QUFLQUcsT0FBT0MsT0FBUCxHQUFpQjtBQUNmQyxjQUFZLG9CQUFDQyxPQUFELEVBQVVDLGFBQVYsRUFBeUJDLElBQXpCLEVBQWtDO0FBQzVDLFVBQU0sSUFBSTlCLFFBQUosQ0FBYTRCLE9BQWIsRUFBc0JDLGFBQXRCLEVBQXFDQyxJQUFyQyxDQUFOO0FBQ0QsR0FIYztBQUlmQyxPQUFLOUIsT0FBTytCLElBSkc7QUFLZkMsU0FBT2hDLE9BQU9nQyxLQUxDO0FBTWZWLFNBQU8sZUFBQ0EsTUFBRCxFQUFXO0FBQ2hCLFFBQUlBLE9BQU1NLGFBQVYsRUFBeUI7QUFDdkI1QixhQUFPc0IsS0FBUCxDQUFhLGVBQWIsRUFBOEJBLE9BQU1NLGFBQXBDO0FBQ0E1QixhQUFPc0IsS0FBUCxDQUFhLFVBQWIsRUFBeUJBLE9BQU1TLElBQS9CLEVBQW9DVCxPQUFNVyxRQUExQztBQUNELEtBSEQsTUFHT2pDLE9BQU9zQixLQUFQLENBQWFBLE1BQWI7QUFDUCxRQUFJQSxPQUFNVyxRQUFWLEVBQW1CakMsT0FBT2dDLEtBQVAsQ0FBYVYsT0FBTVcsUUFBbkIsRUFBbkIsS0FDS0MsUUFBUVgsS0FBUixDQUFjRCxNQUFkO0FBQ047QUFiYyxDQUFqQiIsImZpbGUiOiJESS5kZWZhdWx0LmVzNiIsInNvdXJjZXNDb250ZW50IjpbInZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG52YXIgZnMgPSByZXF1aXJlKCdmcycpXG5jb25zdCB1dWlkVjQgPSByZXF1aXJlKCd1dWlkL3Y0JylcblxudmFyIHNvdXJjZU1hcFN1cHBvcnQgPSByZXF1aXJlKCdzb3VyY2UtbWFwLXN1cHBvcnQnKVxuc291cmNlTWFwU3VwcG9ydC5pbnN0YWxsKClcbnZhciBhcHBFcnJvciA9IHJlcXVpcmUoJy4vZXJyb3IuYXBwRXJyb3InKVxuXG52YXIgbG9nZ2VyXG5cbnsgLy8gTE9HR0VSXG4gIGNvbnN0IHdpbnN0b24gPSByZXF1aXJlKCd3aW5zdG9uJylcbiAgY29uc3QgZW52ID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgfHwgJ2RldmVsb3BtZW50J1xuICBjb25zdCBsb2dEaXIgPSAnbG9nJ1xuLy8gQ3JlYXRlIHRoZSBsb2cgZGlyZWN0b3J5IGlmIGl0IGRvZXMgbm90IGV4aXN0XG4gIGlmICghZnMuZXhpc3RzU3luYyhsb2dEaXIpKSB7XG4gICAgZnMubWtkaXJTeW5jKGxvZ0RpcilcbiAgfVxuICBjb25zdCB0c0Zvcm1hdCA9ICgpID0+IChuZXcgRGF0ZSgpKS50b0xvY2FsZVRpbWVTdHJpbmcoKVxuICBsb2dnZXIgPSBuZXcgKHdpbnN0b24uTG9nZ2VyKSh7XG4gICAgdHJhbnNwb3J0czogW1xuICAgIC8vIGNvbG9yaXplIHRoZSBvdXRwdXQgdG8gdGhlIGNvbnNvbGVcbiAgICAgIG5ldyAod2luc3Rvbi50cmFuc3BvcnRzLkNvbnNvbGUpKHtcbiAgICAgICAgdGltZXN0YW1wOiB0c0Zvcm1hdCxcbiAgICAgICAgY29sb3JpemU6IHRydWUsXG4gICAgICAgIGxldmVsOiAnaW5mbydcbiAgICAgIH0pLFxuICAgICAgbmV3ICh3aW5zdG9uLnRyYW5zcG9ydHMuRmlsZSkoe1xuICAgICAgICBmaWxlbmFtZTogYCR7bG9nRGlyfS9yZXN1bHRzLmxvZ2AsXG4gICAgICAgIHRpbWVzdGFtcDogdHNGb3JtYXQsXG4gICAgICAgIGxldmVsOiBlbnYgPT09ICdkZXZlbG9wbWVudCcgPyAnZGVidWcnIDogJ2luZm8nXG4gICAgICB9KVxuICAgIF1cbiAgfSlcbn1cblxucHJvY2Vzcy5vbigndW5oYW5kbGVkUmVqZWN0aW9uJywgKHJlYXNvbiwgcHJvbWlzZSkgPT4ge1xuICBsb2dnZXIuZXJyb3IoJ3VuaGFuZGxlZFJlamVjdGlvbiBSZWFzb246ICcsIHByb21pc2UsIHJlYXNvbilcbiAgbG9nZ2VyLnRyYWNlKHByb21pc2UpXG59KVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgdGhyb3dFcnJvcjogKG1lc3NhZ2UsIG9yaWdpbmFsRXJyb3IsIGFyZ3MpID0+IHtcbiAgICB0aHJvdyBuZXcgYXBwRXJyb3IobWVzc2FnZSwgb3JpZ2luYWxFcnJvciwgYXJncylcbiAgfSxcbiAgbG9nOiBsb2dnZXIuaW5mbyxcbiAgZGVidWc6IGxvZ2dlci5kZWJ1ZyxcbiAgZXJyb3I6IChlcnJvcikgPT4ge1xuICAgIGlmIChlcnJvci5vcmlnaW5hbEVycm9yKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoJ29yaWdpbmFsRXJyb3InLCBlcnJvci5vcmlnaW5hbEVycm9yKVxuICAgICAgbG9nZ2VyLmVycm9yKCdhcHBFcnJvcicsIGVycm9yLmluZm8sZXJyb3IuYXBwVHJhY2UpXG4gICAgfSBlbHNlIGxvZ2dlci5lcnJvcihlcnJvcilcbiAgICBpZiAoZXJyb3IuYXBwVHJhY2UpbG9nZ2VyLmRlYnVnKGVycm9yLmFwcFRyYWNlKVxuICAgIGVsc2UgY29uc29sZS50cmFjZShlcnJvcilcbiAgfVxufVxuIl19